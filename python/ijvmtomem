#!/usr/bin/env python3

"""
ECE Project Mic-1
Title: Program Converter for ijvm-files
Author: Florian Zwittnigg
Date: 17.11.2021
Rev.: 1.0 
"""

import os
import sys
import argparse

# Reading the file and hand over the content to main
def read_file(filename:str):
        f = open(f'{filename}', mode='rb')

        fileContent = f.read()
        f.close()

        return fileContent

# convert binary data to hex dataformat for ASCII
def convert_content(fileContent:bytes):
        hex_string = fileContent.hex()
        
        n = 8
        # file_header = [hex_string[index : index + n] + "\n" for index in range(8, len(hex_string), n)]
        file_header = hex_string[0 : n]

        if(file_header != "1deadfad"):
                print("Falsches File geladen!")

        split_strings = [hex_string[index : index + n] + "\n" for index in range(8, len(hex_string), n)]
        new_string = .join([split_strings[index*10 : index * 10 +9] for index in range(0,len(split_strings), 10]

        return new_string

# create .txt-File in same directory and write the converted data into it
def write_file(fileContent, filename):
        base = os.path.basename(filename)
        output_filename = os.path.splitext(base)[0]
       
        file = open(f'{output_filename}.txt', "w")

        file.writelines(fileContent)
        
        file.close()

if __name__=='__main__':
    #parsing commandline
    parser = argparse.ArgumentParser(description='Convert Binary to ASCII')
    parser.add_argument('filename', help='filename of binaryfile without file extension')
    args = parser.parse_args()
    
    content_of_file = read_file(args.filename)
    writable_content = convert_content(content_of_file)      
    write_file(writable_content, args.filename)